{"version":3,"sources":["logo.png","Intro.js","Analysis.js","Links.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","nodes","id","comment","author","color","links","source","target","myConfig","nodeHighlightBehavior","node","size","highlightStrokeColor","link","highlightColor","directed","Intro","props","state","this","index","className","csvDelimiter","tableClassName","config","onMouseOverNode","nodeId","i","findIndex","item","setState","playsInline","poster","src","Component","Analysis","Links","App","Navbar","bg","variant","to","logo","Nav","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.954e3ee2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43cbfe15.png\";","import React, { Component } from \"react\";\r\nimport {CsvToHtmlTable} from \"react-csv-to-table\";\r\nimport { Graph } from \"react-d3-graph\";\r\nimport './Intro.css';\r\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\r\nimport { Player } from 'video-react';\r\n\r\nconst data = {\r\n    nodes: [\r\n        { id: \"eioj312\", comment: \"This house is £10M+ possibly heading for £20M depending on exact location\", author: \"redditor_since_2005\"},\r\n        { id: \"eiobluv\", author: \"mysteriousofficial\", comment: \"Beautiful\" },\r\n        { id: \"eiol76f\", author: \"whatsinthereanyways\", comment: \"‘Tis a fancy zone\"  },\r\n        { id: \"f516ks7\", author: \"bjornsborg\", comment: \"*laughs with 3 teeth left*\"  },\r\n        { id: \"f531jn2\", author: \"Zugas\", comment: \"Boss fight!\"  },\r\n        { id: \"f50ljdm\", author: \"RMCPhoto\", comment: \"This man is 35 years old.\"  },\r\n        { id: \"b1v0aj\", color: \"blue\"},\r\n        { id: \"f50d7dg\", color: \"blue\"},\r\n        { id: \"f50bv5d\", color: \"blue\"},\r\n    ],\r\n    links: [\r\n        { source: \"eioj312\", target: \"b1v0aj\" },\r\n        { source: \"eiobluv\", target: \"b1v0aj\" },\r\n        { source: \"eiol76f\", target: \"eioj312\" }, { source: \"f516ks7\", target: \"f50d7dg\" },\r\n        { source: \"f531jn2\", target: \"f50d7dg\" }, { source: \"f50ljdm\", target: \"f50bv5d\" },\r\n        ],\r\n};\r\n\r\nconst myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    node: {\r\n        color: \"lightgreen\",\r\n        size: 500,\r\n        highlightStrokeColor: \"blue\",\r\n    },\r\n    link: {\r\n        highlightColor: \"lightblue\",\r\n    },\r\n    directed: true,\r\n   // staticGraph: true,\r\n};\r\n\r\n\r\nconst sample = `\r\ncomment_id,parent_id,post_id,score,author,body,timestamp\r\neioj312,t3_b1v0aj,b1v0aj,352,redditor_since_2005,This house is £10M+ possibly heading for £20M depending on exact location.,1552793073.0\r\neiobluv,t3_b1v0aj,b1v0aj,50,mysteriousofficial,Beautiful ,1552787510.0\r\neiol76f,t1_eioj312,b1v0aj,106,whatsinthereanyways,‘Tis a fancy zone,1552794723.0\r\nf516ks7,t1_f50d7dg,dmfpro,5,bjornsborg,*laughs with 3 teeth left*,1571966572.0\r\nf531jn2,t1_f50d7dg,dmfpro,2,Zugas,Boss fight!,1571984086.0\r\nf50ljdm,t1_f50bv5d,dmfpro,236,RMCPhoto,This man is 35 years old.,1571958042.0\r\n`;\r\n\r\nclass Intro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {author: null, comment: null}\r\n    }\r\n\r\n    render() {\r\n        const onClickNode = nodeId => {\r\n            const i = data.nodes.findIndex(item => item.id === nodeId);\r\n            this.setState({\r\n                author: data.nodes[i].author ? data.nodes[i].author : \"Author of a post\",\r\n                comment: data.nodes[i].comment ? data.nodes[i].comment : \"-\"})\r\n        };\r\n        const {author, comment, index} = this.state;\r\n        return (\r\n            <div className=\"intro\">\r\n                <div className=\"header\">\r\n                    <h1>Scrapeit - Scrape Reddit</h1> {/*add color F3723F*/}\r\n                    <hr />\r\n                </div>\r\n                <p>As Reddit describes itself, it is \"a network of communities based on people's interests\".\r\n                    <br /> For our project we want to investigate these communities, analysing the network\r\n                    within the communities as well as the network between them.\r\n                    <br /> To do this we gathered information from the top 50 posts of the 300* most active\r\n                    sub Reddits, within the last year.\r\n                    <br /> For each post we saved information about the post itself as well as the comments\r\n                    which a user is most likely to see.\r\n                    <br /> This resulted in <b>8.162.905 rows</b> of data. Information about comments can be seen\r\n                    in the following table:\r\n                </p>\r\n                <CsvToHtmlTable\r\n                    data={sample}\r\n                    csvDelimiter=\",\"\r\n                    tableClassName=\"table table-striped table-hover\"\r\n                />\r\n                <hr />\r\n                <p>\r\n                    The network will be made in such way, that when a comment is a reply to a post, a link will be made\r\n                    between the id of this comment and the corresponding post.\r\n                    <br /> If a comment is a reply to another comment within a post, a link will instead be made between\r\n                    those two comments.\r\n                    <br />And example can be seen below, based on the table above:\r\n                </p>\r\n                <div className=\"graph\">\r\n                    <Graph\r\n                        id=\"graph-id\"\r\n                        data={data}\r\n                        config={myConfig}\r\n                        onMouseOverNode={onClickNode}\r\n                    />;\r\n                    <div className=\"info\">\r\n                        <p>Hover over a node for info</p>\r\n                        <p> Author: {author}</p>\r\n                        <p> Comment: {comment}</p>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <p>\r\n                    With this network and the corresponding information about each of the nodes and\r\n                    the links between them, lots of information can be gathered.\r\n                    <br />\r\n                    We settled to investigate the following topics:\r\n                    <br />\r\n                    <ul>\r\n                        <li>How are the users connected in the different subreddist?</li>\r\n                        <li>How are the users connected bewteen the different subreddits?</li>\r\n                        <li>Is there a relation between the sentimental of a post and the amount of upvotes?</li>\r\n                        <li>Is there a relation between the sentimental of a comment and the amount of upvotes?</li>\r\n                        <li>For the communities detected in the first two questions, does the tone vary?</li>\r\n                        <li>If so, do the tone of a community impact the chances of upvotes on a post/comment?</li>\r\n                    </ul>\r\n                </p>\r\n                <hr />\r\n                <p>\r\n                    This page website is split into three parts (plus the front page including our beautiful faces):\r\n                    <ul>\r\n                        <li>This <b>intro</b> page explaining the project </li>\r\n                        <li>The <b>analysis</b> of the project, split into a network based analysis and a sentimental analysis</li>\r\n                        <li>The <b>links</b> page, with relevant links, including the notebook used for the analysis,\r\n                            as well as theory used in this project.</li>\r\n                    </ul>\r\n                </p>\r\n                <hr />\r\n                <p>Did you get all that? Otherwise check out this awesome video explaining everything:</p>\r\n                <Player\r\n                    playsInline\r\n                    poster=\"/assets/poster.png\"\r\n                    src=\"https://doc-04-0k-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/gac1rmfntdg40fenc83q50un2fue0iq4/1574798400000/05065226572242996209/*/1QBuKv1-oqv-v8h57CeYulVbV2r7t1ecc\"\r\n                />\r\n                <hr />\r\n                <p>* 300 subReddits ended up resulting in too much computing time (way too much), so we will be using 100 subReddits instead.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from \"react\";\r\n\r\nclass Analysis extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>HELLO</h2>\r\n                <p>Cras facilisis urna ornare ex volutpat, et\r\n                    convallis erat elementum. Ut aliquam, ipsum vitae\r\n                    gravida suscipit, metus dui bibendum est, eget rhoncus nibh\r\n                    metus nec massa. Maecenas hendrerit laoreet augue\r\n                    nec molestie. Cum sociis natoque penatibus et magnis\r\n                    dis parturient montes, nascetur ridiculus mus.</p>\r\n\r\n                <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Analysis;","import React, { Component } from \"react\";\r\n\r\nclass Links extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>HELLO</h2>\r\n                <p>Cras facilisis urna ornare ex volutpat, et\r\n                    convallis erat elementum. Ut aliquam, ipsum vitae\r\n                    gravida suscipit, metus dui bibendum est, eget rhoncus nibh\r\n                    metus nec massa. Maecenas hendrerit laoreet augue\r\n                    nec molestie. Cum sociis natoque penatibus et magnis\r\n                    dis parturient montes, nascetur ridiculus mus.</p>\r\n\r\n                <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logo from \"./logo.png\"\nimport {\n    Route,\n    NavLink,\n    HashRouter\n} from \"react-router-dom\";\nimport Intro from \"./Intro\";\nimport Analysis from \"./Analysis\";\nimport Links from \"./Links\";\n\n\n\n\nfunction App() {\n  return (\n  <div className=\"App\">\n    <HashRouter>\n      <Navbar bg=\"white\" variant=\"light\">\n          <NavLink to=\"/\" >\n              <img src={logo} className=\"Logo\"/>\n          </NavLink>\n          <Nav className=\"mr-auto\">\n              <NavLink to=\"/intro\">Intro</NavLink>\n              <NavLink to=\"/analysis\">Analysis</NavLink>\n              <NavLink to=\"/links\">Links</NavLink>\n          </Nav>\n      </Navbar>\n        <div className=\"Body\">\n            <Route path=\"/intro\" component={Intro}/>\n            <Route path=\"/analysis\" component={Analysis}/>\n            <Route path=\"/links\" component={Links}/>\n        </div>\n    </HashRouter>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}